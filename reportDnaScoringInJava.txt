This java code performs DNA sequence alignment using Global Alignment (Needleman-Wunsch algorithm) and 
Local Alignment (Smith-Waterman algorithm). It determines which algorithm to use based on the lengths of the DNA 
sequences and calculates the optimal alignment, alignment score, and visualises the score matrix, with an execution time measurement.

Scoring system:
MATCH: +1 (reward for matching nucleotides)
MISMATCH: -1 (penalty for differing nucleotides)
GAP: -2 (penalty for introducing gaps in alignment)

The algorithm choice is made on the basis of difference in length of both the sequences. If the difference is greater than 10 local alignemnt is used else global alignment is used

Execution Time:
The execution time is measured using the System.nanoTime() method, which captures the time before and after the alignment 
computation. The difference between the two timestamps gives the execution time in nanoseconds, which is then converted to 
milliseconds. 

Data Validation:
Since the DNA sequence only consists of alphabets G,C,T,A, hence a data validation is added such that the user is only able to input correct data.

Output:
Displays alignment scores, aligned sequences, score matrix, and alignment visualization.


Significance of DNA Alignment:
Identifies similarities and differences between organisms.
Finds variations that may indicate genetic diseases, evolution or adaptations.
Aligning viral strains (e.g., COVID-19) helps track mutations and design effective treatments, this is used for drug development.

Steps followed:
Input DNA Sequences
↓
Data Validation: Reject sequences with invalid characters.
↓
Algorithm Selection: If length difference > 10 → Smith-Waterman (local)
Else → Needleman-Wunsch (global)
↓
Scoring Matrix Computation: Dynamic programming for score calculation.
↓
Traceback: Generate aligned sequences.
↓
Output: Aligned sequences, alignment score, and visualization of the alignment, execution time and matrix to calculate score

Testing: 
JUnit for unit testing Java methods.
Manual verification of smaller sequences for correctness (final testing for the website, but this works only for global alignment https://bioboot.github.io/bimm143_W20/class-material/nw/ )
Tested with sample sequences of varying similarity and length for both sequences which have difference > 10 and less than 10. Also tested for sequences which have invalid alphabets except G,C,A,T
Also by inputting the alphabets in upper and lower case
